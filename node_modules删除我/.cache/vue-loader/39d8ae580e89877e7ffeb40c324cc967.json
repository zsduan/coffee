{"remainingRequest":"D:\\培训\\提交项目\\my-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\培训\\提交项目\\my-project\\src\\views\\mainViews\\Menu.vue?vue&type=style&index=0&id=9cea5f04&lang=less&scoped=true&","dependencies":[{"path":"D:\\培训\\提交项目\\my-project\\src\\views\\mainViews\\Menu.vue","mtime":1594384534931},{"path":"D:\\培训\\提交项目\\my-project\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\培训\\提交项目\\my-project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\培训\\提交项目\\my-project\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\培训\\提交项目\\my-project\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\培训\\提交项目\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\培训\\提交项目\\my-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubXktc3dpcGUgLnZhbi1zd2lwZS1pdGVtIHsKICBjb2xvcjogI2ZmZjsKICBmb250LXNpemU6IDIwcHg7CiAgbGluZS1oZWlnaHQ6IDE1MHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBoZWlnaHQ6IDIwMHB4OwogIG1hcmdpbi10b3A6IDU0cHg7CiAgaW1newogIAl3aWR0aDogMTAwJTsKICAJaGVpZ2h0OiAxMDAlOwogIH0KfQoubWVudXsKCWJhY2tncm91bmQ6ICNkZGQ7CiAJcGFkZGluZy1ib3R0b206IDUwcHg7CiAgLnNlYXJjaHsKICAgIHBvc2l0aW9uOiBmaXhlZDsKICAgIHdpZHRoOiAxMDAlOwogICAgei1pbmRleDogMjsKICAgIHRvcDowOwogIH0KfQovLyDorr7nva7oj5zljZXlj6/ku6Xmu5HliqgKLmNvbnRlbnQtbWVudXsKCW92ZXJmbG93LXk6IGF1dG87Cn0KLy8g5pS55Y+Y5Lu35qC86aKc6ImyCi52YW4tY2FyZF9fcHJpY2V7Cgljb2xvcjogcmVkOwp9Cgo="},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/views/mainViews","sourcesContent":["<template>\r\n  \t<div class=\"menu\">\r\n      <!-- 搜索栏 -->\r\n  \t\t<div class=\"search\">\r\n  \t\t\t<form action=\"/\">\r\n\t\t\t  \t<van-search\r\n\t\t\t  \t  v-model=\"value\"\r\n\t\t\t  \t  show-action\r\n\t\t\t  \t  placeholder=\"请输入种类进行搜索\"\r\n            @search=\"onSearch\" \r\n\t\t\t  \t/>\r\n\t\t\t  </form>\r\n  \t\t</div>\r\n  \t\t<!-- banner图 -->\r\n  \t\t<van-swipe class=\"my-swipe\" :autoplay=\"3000\" indicator-color=\"skyblue\">\r\n\t\t\t  <van-swipe-item v-for=\"(item,index) in swipesrc\"><img :src=\"item.bannerImg\" alt=\"\"></van-swipe-item>\r\n\t\t  </van-swipe>\r\n      <!-- 选择列表 -->\r\n  \t\t<van-dropdown-menu>\r\n  \t\t\t  <van-dropdown-item v-model=\"value1\" :options=\"option1\" @change=\"changeVlue\"/>\r\n  \t\t\t  <van-dropdown-item v-model=\"value2\" :options=\"option2\" />\r\n  \t\t</van-dropdown-menu>\r\n      <!-- 显示菜单 -->\r\n  \t\t<div class=\"content-menu\">\r\n  \t\t\t<van-card\r\n  \t\t\t\t  v-for=\"(item,index) in productData\"\r\n  \t\t\t\t  :key=\"index\"\r\n  \t\t\t  \t:price=\"item.price\"\r\n  \t\t\t  \t:desc=\"item.desc\"\r\n  \t\t\t  \t:title=\"item.name\"\r\n  \t\t\t  \t:thumb=\"item.smallImg\"\r\n            @click=\"commitid(item)\"\r\n  \t\t\t/>\r\n  \t\t</div>\r\n  \t</div>\r\n</template>\r\n\r\n<script>\r\n//配置全局的vuex引入\r\nimport {createNamespacedHelpers} from 'vuex'\r\n//引入全局的state\r\nconst {mapState} = createNamespacedHelpers('menuModule')\r\n\r\nimport { Toast } from 'vant';\r\n\r\nexport default {\r\n  name: 'Menu',\r\n  data(){\r\n  \treturn{\r\n  \t\t// 搜索\r\n  \t\tvalue:\"\",\r\n  \t\t// 切换菜单\r\n  \t\t// 新品的菜单\r\n  \t\tvalue1: 0,\r\n  \t\t// 排序的菜单\r\n\t    value2: 'a',\r\n\t    // 新品菜单选项\r\n\t    option1: [],\r\n\t    // 排序菜单选项\r\n\t    option2: [\r\n\t      { text: '默认排序', value: 'a' },\r\n\t      { text: '价格从高到低', value: 'b' },\r\n\t      { text: '价格从低到高', value: 'c' },\r\n\t    ],\r\n\t    // 商品数据处理\r\n\t    productData:[],\r\n\t    // banner图\r\n\t    swipesrc:[],\r\n  \t}\r\n  },\r\n   mounted(){\r\n      // 获取banner图\r\n   \t\tthis.getBnner();\r\n      // 获取类别\r\n  \t\tthis.getType();\r\n      // 在localStorage中放pid为商品详情页做准备\r\n      localStorage.setItem('pid',JSON.stringify(\"\"));\r\n  },\r\n  computed: {\r\n    // 全局store的处理\r\n    \t...mapState(['bannerDataCache','option1Cache'])\r\n\r\n  },\r\n\r\n  methods:{\r\n  \t// 获取banner数据\r\n  \tgetBnner(){\r\n\r\n  \t\t//获取vuex的banner缓存数据，如果存在缓存数据，则不发起请求，否则发起请求\r\n\t    if (this.bannerDataCache.length > 0) {\r\n\t        this.swipesrc = this.bannerDataCache;\r\n\t        return;\r\n\t    }\r\n\r\n\t    //开启加载提示\r\n\t    Toast.loading({\r\n\t      \tmessage: \"加载中...\",\r\n\t      \tforbidClick: true,\r\n\t      \t//延迟自动关闭加载提示，如果该值为0，则不会自动关闭\r\n\t      \tduration: 0\r\n\t    });\r\n\r\n      // 获取banner图的数据\r\n\r\n\t \t  this.axios({\r\n\t  \t\t\turl:\"http://1.zsduan.applinzi.com/wm/banner/banner.php\",\r\n\t  \t\t\tmethod:'get'\r\n\t  \t\t}).then(result => {\r\n\t  \t\t\tif (result.data.code == 300 ) {\r\n\t  \t\t\t\tToast.clear();\r\n\t  \t\t\t\tthis.swipesrc = result.data.result;\r\n\t\t            //缓存banner数据在vuex中\r\n\t\t            this.$store.commit('menuModule/changeData', {\r\n\t\t              key: 'bannerDataCache',\r\n\t\t              value: result.data.result\r\n\t\t            })\r\n\t  \t\t\t}\r\n\t  \t\t}).catch(err => {\r\n\t  \t\t\tToast.clear();\r\n\t  \t\t\t\r\n\t  \t})\r\n  \t},\r\n\r\n    // 获取类别的数据\r\n  \tgetType(){\r\n  \t\t//获取vuex的选择条件缓存数据，如果存在缓存数据，则不发起请求，否则发起请求\r\n\t    if (this.option1Cache.length > 0) {\r\n\t        this.option1 = this.option1Cache;\r\n\t        this.getProductByType('isHot');\r\n\t        return;\r\n\t    }\r\n\r\n\t    //开启加载提示\r\n\t    Toast.loading({\r\n\t      \tmessage: \"加载中...\",\r\n\t      \tforbidClick: true,\r\n\t      \t//延迟自动关闭加载提示，如果该值为0，则不会自动关闭\r\n\t      \tduration: 0\r\n\t    });\r\n\r\n      // 开始获取类别\r\n  \t\tthis.axios({\r\n  \t\t\tmethod:\"get\",\r\n  \t\t\turl:\"http://www.kangliuyong.com:10002/type\",\r\n  \t\t\tparams:{\r\n  \t\t\t\tappkey:this.appkey\r\n  \t\t\t}\r\n  \t\t}).then(result => {\r\n  \t\t\tToast.clear();\r\n        // 进行类别的数据处理\r\n  \t\t\tresult.data.result.forEach(v => {\r\n            v.text = \"\";\r\n            v.value = 0;\r\n          })\r\n        // 讲返回的类别赋值给数组\r\n  \t\t\tfor (var i = 0; i < result.data.result.length; i++) {\r\n  \t\t\t\t\r\n  \t\t\t\tresult.data.result[i].value = i+1;\r\n  \t\t\t\tresult.data.result[i].text = result.data.result[i].typeDesc;\r\n  \t\t\t}\r\n        // 推一个数组在最前面\r\n  \t\t\tresult.data.result.unshift({type: 'isHot', typeDesc: '最新推荐', isActive: true,text:\"最新推荐\",value:0});\r\n  \t\t\tthis.option1 = result.data.result;\r\n\r\n\r\n  \t\t\t//缓存选择数据在vuex中\r\n\t\t    this.$store.commit('menuModule/changeData', {\r\n\t\t      key: 'option1Cache',\r\n\t\t      value: result.data.result\r\n\t\t    })\r\n        // 调用处理菜单函数\r\n  \t\t\tthis.getProductByType('isHot');\r\n  \t\t}).catch(err => {\r\n  \t\t\tToast.clear();\r\n  \t\t\t\r\n  \t\t})\r\n  \t},\r\n  \t// 改变选择的值，老获取商品的数据\r\n  \tchangeVlue(){\t\t\r\n  \t\tthis.getProductByType(this.option1[this.value1].type);\r\n  \t},\r\n\r\n  \t//根据类型获取商品数据\r\n    getProductByType(item) {\r\n      this.productData = [];\r\n\r\n      let params = {\r\n        appkey: this.appkey,\r\n        key: 'type',\r\n        value: item\r\n      };\r\n\r\n      //最近推荐\r\n      if (item == 'isHot') {\r\n        params.key = 'isHot';\r\n        params.value = 1\r\n      }\r\n\r\n      //开启加载提示\r\n\t    Toast.loading({\r\n\t      message: \"加载中...\",\r\n\t      forbidClick: true,\r\n\t      //延迟自动关闭加载提示，如果该值为0，则不会自动关闭\r\n\t      duration: 0\r\n\t    });\r\n\r\n      // 开始处理菜单\r\n      this.axios({\r\n        method: 'GET',\r\n        url: 'http://www.kangliuyong.com:10002/typeProducts',\r\n        params\r\n      }).then(result => {\r\n        if (result.data.code == 500) {\r\n        \tToast.clear();\r\n        \tToast.clear();\r\n            this.productData = result.data.result;\r\n        }\r\n      }).catch(err => {\r\n        \r\n      })\r\n      \r\n    },\r\n    // 发送pid给详情页\r\n    commitid(item){\r\n      localStorage.setItem('pid',JSON.stringify(item.pid));\r\n      this.$router.push({name:\"Detail\"});\r\n    },\r\n    // 搜索处理\r\n    onSearch(val) {\r\n      if (this.value == \"\") {\r\n        Toast(\"请输入搜索内容\");\r\n        return;\r\n      }\r\n      this.$router.push({name:\"Search\",query:{w:val}});\r\n    },\r\n  }\r\n  \r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .my-swipe .van-swipe-item {\r\n    color: #fff;\r\n    font-size: 20px;\r\n    line-height: 150px;\r\n    text-align: center;\r\n    height: 200px;\r\n    margin-top: 54px;\r\n    img{\r\n    \twidth: 100%;\r\n    \theight: 100%;\r\n    }\r\n  }\r\n  .menu{\r\n  \tbackground: #ddd;\r\n   \tpadding-bottom: 50px;\r\n    .search{\r\n      position: fixed;\r\n      width: 100%;\r\n      z-index: 2;\r\n      top:0;\r\n    }\r\n  }\r\n  // 设置菜单可以滑动\r\n  .content-menu{\r\n  \toverflow-y: auto;\r\n  }\r\n  // 改变价格颜色\r\n  .van-card__price{\r\n  \tcolor: red;\r\n  }\r\n\r\n</style>"]}]}