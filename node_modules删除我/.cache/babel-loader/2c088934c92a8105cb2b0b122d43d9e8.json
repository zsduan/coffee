{"remainingRequest":"D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\babel-loader\\lib\\index.js!D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\培训\\2020-06-30笔记\\my-project\\src\\views\\Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\培训\\2020-06-30笔记\\my-project\\src\\views\\Detail.vue","mtime":1594374644237},{"path":"D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\培训\\2020-06-30笔记\\my-project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}